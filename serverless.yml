org: parislht
service: microservicio-usuarios

provider:
  name: aws
  runtime: python3.12
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::418047659300:role/LabRole
  stage: ${opt:stage, 'dev'}
  environment:
    TABLE_NAME_USERS: ${sls:stage}-t_usuarios
    TABLE_NAME_TOKENS: ${sls:stage}-t_tokens_acceso

functions:
  crear-usuario:
    handler: CrearUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/crear
          method: post
          cors: true
          integration: lambda

  login-usuario:
    handler: LoginUsuario.lambda_handler
    events:
      - http:
          path: /usuarios/login
          method: post
          cors: true
          integration: lambda

  validarTokenAcceso:
    handler: ValidarTokenAcceso.lambda_handler
    # no necesita endpoint HTTP, solo es invocada internamente por otras Lambdas

resources:
  Resources:
    TablaUsuarios:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_USERS}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: username
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    TablaTokens:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME_TOKENS}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: token
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
